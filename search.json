[
  {
    "objectID": "transformersjs/04_transformers js.html",
    "href": "transformersjs/04_transformers js.html",
    "title": "transformers js",
    "section": "",
    "text": "Upload image",
    "crumbs": [
      "transformersjs",
      "transformers js"
    ]
  },
  {
    "objectID": "transformersjs/04_transformers js.html#hello",
    "href": "transformersjs/04_transformers js.html#hello",
    "title": "transformers js",
    "section": "",
    "text": "Upload image",
    "crumbs": [
      "transformersjs",
      "transformers js"
    ]
  },
  {
    "objectID": "transformersjs/04_transformers js.html#bye",
    "href": "transformersjs/04_transformers js.html#bye",
    "title": "transformers js",
    "section": "Bye",
    "text": "Bye",
    "crumbs": [
      "transformersjs",
      "transformers js"
    ]
  },
  {
    "objectID": "Reglas de Asociación/01_implementacion_reglas_asociacion.html",
    "href": "Reglas de Asociación/01_implementacion_reglas_asociacion.html",
    "title": "nbdev-test",
    "section": "",
    "text": "### Bibliotecas necesarias:\n\n#! pip install mlxtend\n#! pip install pandas\n\n\n# Importar las bibliotecas necesarias\nimport pandas as pd\nfrom mlxtend.preprocessing import TransactionEncoder\nfrom mlxtend.frequent_patterns import apriori, association_rules\n\n# Datos de transacciones: lista de listas, donde cada sublista representa una transacción\ntransactions = [\n    ['Leche', 'Pan', 'Mantequilla'],\n    ['Leche', 'Pan'],\n    ['Leche', 'Manzana'],\n    ['Pan', 'Mantequilla'],\n    ['Leche', 'Pan', 'Mantequilla', 'Manzana'],\n    ['Manzana', 'Mantequilla']\n]\n\ntransactions\n\n[['Leche', 'Pan', 'Mantequilla'],\n ['Leche', 'Pan'],\n ['Leche', 'Manzana'],\n ['Pan', 'Mantequilla'],\n ['Leche', 'Pan', 'Mantequilla', 'Manzana'],\n ['Manzana', 'Mantequilla']]\n\n\n\n#Creamos una instancia de TransactionEncoder. \n# Este objeto se utiliza para transformar nuestras transacciones en una matriz booleana.\nte = TransactionEncoder()\nte\n\nTransactionEncoder()In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org. TransactionEncoderiNot fittedTransactionEncoder()",
    "crumbs": [
      "Reglas de Asociación",
      "Implementación del ejemplo con python"
    ]
  },
  {
    "objectID": "Reglas de Asociación/01_implementacion_reglas_asociacion.html#implementación-del-ejemplo-con-python",
    "href": "Reglas de Asociación/01_implementacion_reglas_asociacion.html#implementación-del-ejemplo-con-python",
    "title": "nbdev-test",
    "section": "",
    "text": "### Bibliotecas necesarias:\n\n#! pip install mlxtend\n#! pip install pandas\n\n\n# Importar las bibliotecas necesarias\nimport pandas as pd\nfrom mlxtend.preprocessing import TransactionEncoder\nfrom mlxtend.frequent_patterns import apriori, association_rules\n\n# Datos de transacciones: lista de listas, donde cada sublista representa una transacción\ntransactions = [\n    ['Leche', 'Pan', 'Mantequilla'],\n    ['Leche', 'Pan'],\n    ['Leche', 'Manzana'],\n    ['Pan', 'Mantequilla'],\n    ['Leche', 'Pan', 'Mantequilla', 'Manzana'],\n    ['Manzana', 'Mantequilla']\n]\n\ntransactions\n\n[['Leche', 'Pan', 'Mantequilla'],\n ['Leche', 'Pan'],\n ['Leche', 'Manzana'],\n ['Pan', 'Mantequilla'],\n ['Leche', 'Pan', 'Mantequilla', 'Manzana'],\n ['Manzana', 'Mantequilla']]\n\n\n\n#Creamos una instancia de TransactionEncoder. \n# Este objeto se utiliza para transformar nuestras transacciones en una matriz booleana.\nte = TransactionEncoder()\nte\n\nTransactionEncoder()In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org. TransactionEncoderiNot fittedTransactionEncoder()",
    "crumbs": [
      "Reglas de Asociación",
      "Implementación del ejemplo con python"
    ]
  },
  {
    "objectID": "Reglas de Asociación/01_implementacion_reglas_asociacion.html#transactionencoder",
    "href": "Reglas de Asociación/01_implementacion_reglas_asociacion.html#transactionencoder",
    "title": "nbdev-test",
    "section": "TransactionEncoder",
    "text": "TransactionEncoder\nTransactionEncoder - es una clase de la biblioteca mlxtend que se utiliza para convertir listas de transacciones en una matriz booleana, - lo que es especialmente útil para el análisis de asociaciones y la minería de datos.\n¿Qué es TransactionEncoder? - TransactionEncoder es un transformador que toma una lista de listas (donde cada sublista representa una transacción que contiene uno o más ítems) - y la convierte en una matriz de formato booleano o de ceros y unos. - Cada fila de la matriz resultante representa una transacción, y cada columna representa un ítem. Los valores de la matriz indican la presencia (True o 1) o la ausencia (False o 0) de un ítem en cada transacción.\n¿Qué hace TransactionEncoder?\nAjuste y Transformación:\nfit: Ajusta el codificador a los datos, identificando todos los ítems únicos en el conjunto de transacciones. transform: Convierte las transacciones en una matriz booleana basada en los ítems identificados. fit_transform: Ajusta y transforma los datos en una sola operación. Matriz Booleana: La matriz booleana generada tiene las siguientes características:\nFilas: Cada fila representa una transacción. Columnas: Cada columna representa un ítem único encontrado en las transacciones. Valores: True (o 1) indica que el ítem está presente en la transacción, y False (o 0) indica que el ítem no está presente.\n\n# Transformar los datos de transacciones en una matriz booleana\nte_ary = te.fit_transform(transactions)\nte_ary\n\narray([[ True,  True, False,  True],\n       [ True, False, False,  True],\n       [ True, False,  True, False],\n       [False,  True, False,  True],\n       [ True,  True,  True,  True],\n       [False,  True,  True, False]])\n\n\n\n# Convertir la matriz booleana en un DataFrame de pandas\n# te_ary: es la matriz booleana generada por TransactionEncoder, donde cada fila representa una transacción\n# y cada columna representa un producto. Un valor 1 indica que el producto está presente en la transacción,\n# y un valor 0 indica que no lo está.\n# columns=te.columns_: son los nombres de las columnas (los nombres de los productos) que se asignan a las columnas del DataFrame\ndf = pd.DataFrame(te_ary, columns=te.columns_)\n\n# Mostrar el DataFrame resultante para verificar la transformación\ndf\n\n\n\n\n\n\n\n\nLeche\nMantequilla\nManzana\nPan\n\n\n\n\n0\nTrue\nTrue\nFalse\nTrue\n\n\n1\nTrue\nFalse\nFalse\nTrue\n\n\n2\nTrue\nFalse\nTrue\nFalse\n\n\n3\nFalse\nTrue\nFalse\nTrue\n\n\n4\nTrue\nTrue\nTrue\nTrue\n\n\n5\nFalse\nTrue\nTrue\nFalse\n\n\n\n\n\n\n\n\n# Calcular los ítems frecuentes utilizando el algoritmo Apriori\n# Utilizamos la función apriori para encontrar ítems frecuentes en las transacciones\n# - df: El DataFrame que contiene las transacciones transformadas\n# - min_support=0.1: Definimos el soporte mínimo como 0.1 (10%). Esto significa que un ítem debe aparecer en al menos el 10% de las transacciones para ser considerado frecuente.\n# - use_colnames=True: Usamos los nombres de las columnas (los nombres de los productos) en lugar de índices numéricos\nfrequent_itemsets = apriori(df, min_support=0.1, use_colnames=True)\n\n# Mostrar los ítems frecuentes y su soporte\nprint(\"Ítems frecuentes encontrados:\")\nfrequent_itemsets\n\nÍtems frecuentes encontrados:\n\n\n\n\n\n\n\n\n\nsupport\nitemsets\n\n\n\n\n0\n0.666667\n(Leche)\n\n\n1\n0.666667\n(Mantequilla)\n\n\n2\n0.500000\n(Manzana)\n\n\n3\n0.666667\n(Pan)\n\n\n4\n0.333333\n(Leche, Mantequilla)\n\n\n5\n0.333333\n(Manzana, Leche)\n\n\n6\n0.500000\n(Pan, Leche)\n\n\n7\n0.333333\n(Manzana, Mantequilla)\n\n\n8\n0.500000\n(Pan, Mantequilla)\n\n\n9\n0.166667\n(Pan, Manzana)\n\n\n10\n0.166667\n(Manzana, Leche, Mantequilla)\n\n\n11\n0.333333\n(Pan, Leche, Mantequilla)\n\n\n12\n0.166667\n(Pan, Manzana, Leche)\n\n\n13\n0.166667\n(Pan, Manzana, Mantequilla)\n\n\n14\n0.166667\n(Pan, Manzana, Leche, Mantequilla)\n\n\n\n\n\n\n\n\n# Generar las reglas de asociación\n# Utilizamos la función association_rules para generar las reglas a partir de los ítems frecuentes.\n# - frequent_itemsets: contiene los ítems frecuentes calculados con el algoritmo Apriori.\n# - metric: definimos la métrica \"confidence\" para evaluar las reglas.\n# - min_threshold: establecemos un umbral mínimo de 0.5 (50%) para la métrica de confianza.\nrules = association_rules(frequent_itemsets, metric=\"confidence\", min_threshold=0.5)\n\n# Filtrar y mostrar las reglas\n# Seleccionamos las columnas más relevantes para mostrar: antecedentes, consecuentes, soporte, confianza y lift.\nrules = rules[['antecedents', 'consequents', 'support', 'confidence', 'lift']]\nprint(\"Reglas de asociación generadas:\")\nrules\n\nReglas de asociación generadas:\n\n\n\n\n\n\n\n\n\nantecedents\nconsequents\nsupport\nconfidence\nlift\n\n\n\n\n0\n(Leche)\n(Mantequilla)\n0.333333\n0.500000\n0.750\n\n\n1\n(Mantequilla)\n(Leche)\n0.333333\n0.500000\n0.750\n\n\n2\n(Manzana)\n(Leche)\n0.333333\n0.666667\n1.000\n\n\n3\n(Leche)\n(Manzana)\n0.333333\n0.500000\n1.000\n\n\n4\n(Pan)\n(Leche)\n0.500000\n0.750000\n1.125\n\n\n5\n(Leche)\n(Pan)\n0.500000\n0.750000\n1.125\n\n\n6\n(Manzana)\n(Mantequilla)\n0.333333\n0.666667\n1.000\n\n\n7\n(Mantequilla)\n(Manzana)\n0.333333\n0.500000\n1.000\n\n\n8\n(Pan)\n(Mantequilla)\n0.500000\n0.750000\n1.125\n\n\n9\n(Mantequilla)\n(Pan)\n0.500000\n0.750000\n1.125\n\n\n10\n(Manzana, Leche)\n(Mantequilla)\n0.166667\n0.500000\n0.750\n\n\n11\n(Manzana, Mantequilla)\n(Leche)\n0.166667\n0.500000\n0.750\n\n\n12\n(Leche, Mantequilla)\n(Manzana)\n0.166667\n0.500000\n1.000\n\n\n13\n(Pan, Leche)\n(Mantequilla)\n0.333333\n0.666667\n1.000\n\n\n14\n(Pan, Mantequilla)\n(Leche)\n0.333333\n0.666667\n1.000\n\n\n15\n(Leche, Mantequilla)\n(Pan)\n0.333333\n1.000000\n1.500\n\n\n16\n(Pan)\n(Leche, Mantequilla)\n0.333333\n0.500000\n1.500\n\n\n17\n(Leche)\n(Pan, Mantequilla)\n0.333333\n0.500000\n1.000\n\n\n18\n(Mantequilla)\n(Pan, Leche)\n0.333333\n0.500000\n1.000\n\n\n19\n(Pan, Manzana)\n(Leche)\n0.166667\n1.000000\n1.500\n\n\n20\n(Manzana, Leche)\n(Pan)\n0.166667\n0.500000\n0.750\n\n\n21\n(Pan, Manzana)\n(Mantequilla)\n0.166667\n1.000000\n1.500\n\n\n22\n(Manzana, Mantequilla)\n(Pan)\n0.166667\n0.500000\n0.750\n\n\n23\n(Pan, Manzana, Leche)\n(Mantequilla)\n0.166667\n1.000000\n1.500\n\n\n24\n(Pan, Manzana, Mantequilla)\n(Leche)\n0.166667\n1.000000\n1.500\n\n\n25\n(Pan, Leche, Mantequilla)\n(Manzana)\n0.166667\n0.500000\n1.000\n\n\n26\n(Manzana, Leche, Mantequilla)\n(Pan)\n0.166667\n1.000000\n1.500\n\n\n27\n(Pan, Manzana)\n(Leche, Mantequilla)\n0.166667\n1.000000\n3.000\n\n\n28\n(Manzana, Leche)\n(Pan, Mantequilla)\n0.166667\n0.500000\n1.000\n\n\n29\n(Manzana, Mantequilla)\n(Pan, Leche)\n0.166667\n0.500000\n1.000\n\n\n30\n(Leche, Mantequilla)\n(Pan, Manzana)\n0.166667\n0.500000\n3.000\n\n\n\n\n\n\n\n\n# Filtrar y mostrar las reglas\n# Seleccionamos solo las columnas relevantes para mostrar\nrules = rules[['antecedents', 'consequents', 'support', 'confidence', 'lift']]\nprint(\"Reglas de asociación generadas:\")\nrules\n\nReglas de asociación generadas:\n\n\n\n\n\n\n\n\n\nantecedents\nconsequents\nsupport\nconfidence\nlift\n\n\n\n\n0\n(Leche)\n(Mantequilla)\n0.333333\n0.500000\n0.750\n\n\n1\n(Mantequilla)\n(Leche)\n0.333333\n0.500000\n0.750\n\n\n2\n(Manzana)\n(Leche)\n0.333333\n0.666667\n1.000\n\n\n3\n(Leche)\n(Manzana)\n0.333333\n0.500000\n1.000\n\n\n4\n(Pan)\n(Leche)\n0.500000\n0.750000\n1.125\n\n\n5\n(Leche)\n(Pan)\n0.500000\n0.750000\n1.125\n\n\n6\n(Manzana)\n(Mantequilla)\n0.333333\n0.666667\n1.000\n\n\n7\n(Mantequilla)\n(Manzana)\n0.333333\n0.500000\n1.000\n\n\n8\n(Pan)\n(Mantequilla)\n0.500000\n0.750000\n1.125\n\n\n9\n(Mantequilla)\n(Pan)\n0.500000\n0.750000\n1.125\n\n\n10\n(Manzana, Leche)\n(Mantequilla)\n0.166667\n0.500000\n0.750\n\n\n11\n(Manzana, Mantequilla)\n(Leche)\n0.166667\n0.500000\n0.750\n\n\n12\n(Leche, Mantequilla)\n(Manzana)\n0.166667\n0.500000\n1.000\n\n\n13\n(Pan, Leche)\n(Mantequilla)\n0.333333\n0.666667\n1.000\n\n\n14\n(Pan, Mantequilla)\n(Leche)\n0.333333\n0.666667\n1.000\n\n\n15\n(Leche, Mantequilla)\n(Pan)\n0.333333\n1.000000\n1.500\n\n\n16\n(Pan)\n(Leche, Mantequilla)\n0.333333\n0.500000\n1.500\n\n\n17\n(Leche)\n(Pan, Mantequilla)\n0.333333\n0.500000\n1.000\n\n\n18\n(Mantequilla)\n(Pan, Leche)\n0.333333\n0.500000\n1.000\n\n\n19\n(Pan, Manzana)\n(Leche)\n0.166667\n1.000000\n1.500\n\n\n20\n(Manzana, Leche)\n(Pan)\n0.166667\n0.500000\n0.750\n\n\n21\n(Pan, Manzana)\n(Mantequilla)\n0.166667\n1.000000\n1.500\n\n\n22\n(Manzana, Mantequilla)\n(Pan)\n0.166667\n0.500000\n0.750\n\n\n23\n(Pan, Manzana, Leche)\n(Mantequilla)\n0.166667\n1.000000\n1.500\n\n\n24\n(Pan, Manzana, Mantequilla)\n(Leche)\n0.166667\n1.000000\n1.500\n\n\n25\n(Pan, Leche, Mantequilla)\n(Manzana)\n0.166667\n0.500000\n1.000\n\n\n26\n(Manzana, Leche, Mantequilla)\n(Pan)\n0.166667\n1.000000\n1.500\n\n\n27\n(Pan, Manzana)\n(Leche, Mantequilla)\n0.166667\n1.000000\n3.000\n\n\n28\n(Manzana, Leche)\n(Pan, Mantequilla)\n0.166667\n0.500000\n1.000\n\n\n29\n(Manzana, Mantequilla)\n(Pan, Leche)\n0.166667\n0.500000\n1.000\n\n\n30\n(Leche, Mantequilla)\n(Pan, Manzana)\n0.166667\n0.500000\n3.000\n\n\n\n\n\n\n\n\n# Interpretación del resultado\n# Iterar sobre cada regla para imprimir una interpretación más clara\nfor idx, rule in rules.iterrows():\n    # Convertir los conjuntos de antecedentes y consecuentes en cadenas de texto\n    antecedents = ', '.join(list(rule['antecedents']))\n    consequents = ', '.join(list(rule['consequents']))\n    support = rule['support']\n    confidence = rule['confidence']\n    lift = rule['lift']\n    \n    # Imprimir la interpretación de cada regla\n    print(f\"Regla: {antecedents} -&gt; {consequents}\")\n    print(f\"  Soporte: {support:.2f}\")\n    print(f\"  Confianza: {confidence:.2f}\")\n    print(f\"  Lift: {lift:.2f}\")\n    print(f\"  Interpretación: Si un cliente compra {antecedents}, hay una confianza del {confidence:.2%} de que también comprará {consequents}. El lift de {lift:.2f} indica que esta relación es {lift:.2f} veces más probable que si los productos fueran independientes.\\n\")\n\nRegla: Leche -&gt; Mantequilla\n  Soporte: 0.33\n  Confianza: 0.50\n  Lift: 0.75\n  Interpretación: Si un cliente compra Leche, hay una confianza del 50.00% de que también comprará Mantequilla. El lift de 0.75 indica que esta relación es 0.75 veces más probable que si los productos fueran independientes.\n\nRegla: Mantequilla -&gt; Leche\n  Soporte: 0.33\n  Confianza: 0.50\n  Lift: 0.75\n  Interpretación: Si un cliente compra Mantequilla, hay una confianza del 50.00% de que también comprará Leche. El lift de 0.75 indica que esta relación es 0.75 veces más probable que si los productos fueran independientes.\n\nRegla: Manzana -&gt; Leche\n  Soporte: 0.33\n  Confianza: 0.67\n  Lift: 1.00\n  Interpretación: Si un cliente compra Manzana, hay una confianza del 66.67% de que también comprará Leche. El lift de 1.00 indica que esta relación es 1.00 veces más probable que si los productos fueran independientes.\n\nRegla: Leche -&gt; Manzana\n  Soporte: 0.33\n  Confianza: 0.50\n  Lift: 1.00\n  Interpretación: Si un cliente compra Leche, hay una confianza del 50.00% de que también comprará Manzana. El lift de 1.00 indica que esta relación es 1.00 veces más probable que si los productos fueran independientes.\n\nRegla: Pan -&gt; Leche\n  Soporte: 0.50\n  Confianza: 0.75\n  Lift: 1.12\n  Interpretación: Si un cliente compra Pan, hay una confianza del 75.00% de que también comprará Leche. El lift de 1.12 indica que esta relación es 1.12 veces más probable que si los productos fueran independientes.\n\nRegla: Leche -&gt; Pan\n  Soporte: 0.50\n  Confianza: 0.75\n  Lift: 1.12\n  Interpretación: Si un cliente compra Leche, hay una confianza del 75.00% de que también comprará Pan. El lift de 1.12 indica que esta relación es 1.12 veces más probable que si los productos fueran independientes.\n\nRegla: Manzana -&gt; Mantequilla\n  Soporte: 0.33\n  Confianza: 0.67\n  Lift: 1.00\n  Interpretación: Si un cliente compra Manzana, hay una confianza del 66.67% de que también comprará Mantequilla. El lift de 1.00 indica que esta relación es 1.00 veces más probable que si los productos fueran independientes.\n\nRegla: Mantequilla -&gt; Manzana\n  Soporte: 0.33\n  Confianza: 0.50\n  Lift: 1.00\n  Interpretación: Si un cliente compra Mantequilla, hay una confianza del 50.00% de que también comprará Manzana. El lift de 1.00 indica que esta relación es 1.00 veces más probable que si los productos fueran independientes.\n\nRegla: Pan -&gt; Mantequilla\n  Soporte: 0.50\n  Confianza: 0.75\n  Lift: 1.12\n  Interpretación: Si un cliente compra Pan, hay una confianza del 75.00% de que también comprará Mantequilla. El lift de 1.12 indica que esta relación es 1.12 veces más probable que si los productos fueran independientes.\n\nRegla: Mantequilla -&gt; Pan\n  Soporte: 0.50\n  Confianza: 0.75\n  Lift: 1.12\n  Interpretación: Si un cliente compra Mantequilla, hay una confianza del 75.00% de que también comprará Pan. El lift de 1.12 indica que esta relación es 1.12 veces más probable que si los productos fueran independientes.\n\nRegla: Manzana, Leche -&gt; Mantequilla\n  Soporte: 0.17\n  Confianza: 0.50\n  Lift: 0.75\n  Interpretación: Si un cliente compra Manzana, Leche, hay una confianza del 50.00% de que también comprará Mantequilla. El lift de 0.75 indica que esta relación es 0.75 veces más probable que si los productos fueran independientes.\n\nRegla: Manzana, Mantequilla -&gt; Leche\n  Soporte: 0.17\n  Confianza: 0.50\n  Lift: 0.75\n  Interpretación: Si un cliente compra Manzana, Mantequilla, hay una confianza del 50.00% de que también comprará Leche. El lift de 0.75 indica que esta relación es 0.75 veces más probable que si los productos fueran independientes.\n\nRegla: Leche, Mantequilla -&gt; Manzana\n  Soporte: 0.17\n  Confianza: 0.50\n  Lift: 1.00\n  Interpretación: Si un cliente compra Leche, Mantequilla, hay una confianza del 50.00% de que también comprará Manzana. El lift de 1.00 indica que esta relación es 1.00 veces más probable que si los productos fueran independientes.\n\nRegla: Pan, Leche -&gt; Mantequilla\n  Soporte: 0.33\n  Confianza: 0.67\n  Lift: 1.00\n  Interpretación: Si un cliente compra Pan, Leche, hay una confianza del 66.67% de que también comprará Mantequilla. El lift de 1.00 indica que esta relación es 1.00 veces más probable que si los productos fueran independientes.\n\nRegla: Pan, Mantequilla -&gt; Leche\n  Soporte: 0.33\n  Confianza: 0.67\n  Lift: 1.00\n  Interpretación: Si un cliente compra Pan, Mantequilla, hay una confianza del 66.67% de que también comprará Leche. El lift de 1.00 indica que esta relación es 1.00 veces más probable que si los productos fueran independientes.\n\nRegla: Leche, Mantequilla -&gt; Pan\n  Soporte: 0.33\n  Confianza: 1.00\n  Lift: 1.50\n  Interpretación: Si un cliente compra Leche, Mantequilla, hay una confianza del 100.00% de que también comprará Pan. El lift de 1.50 indica que esta relación es 1.50 veces más probable que si los productos fueran independientes.\n\nRegla: Pan -&gt; Leche, Mantequilla\n  Soporte: 0.33\n  Confianza: 0.50\n  Lift: 1.50\n  Interpretación: Si un cliente compra Pan, hay una confianza del 50.00% de que también comprará Leche, Mantequilla. El lift de 1.50 indica que esta relación es 1.50 veces más probable que si los productos fueran independientes.\n\nRegla: Leche -&gt; Pan, Mantequilla\n  Soporte: 0.33\n  Confianza: 0.50\n  Lift: 1.00\n  Interpretación: Si un cliente compra Leche, hay una confianza del 50.00% de que también comprará Pan, Mantequilla. El lift de 1.00 indica que esta relación es 1.00 veces más probable que si los productos fueran independientes.\n\nRegla: Mantequilla -&gt; Pan, Leche\n  Soporte: 0.33\n  Confianza: 0.50\n  Lift: 1.00\n  Interpretación: Si un cliente compra Mantequilla, hay una confianza del 50.00% de que también comprará Pan, Leche. El lift de 1.00 indica que esta relación es 1.00 veces más probable que si los productos fueran independientes.\n\nRegla: Pan, Manzana -&gt; Leche\n  Soporte: 0.17\n  Confianza: 1.00\n  Lift: 1.50\n  Interpretación: Si un cliente compra Pan, Manzana, hay una confianza del 100.00% de que también comprará Leche. El lift de 1.50 indica que esta relación es 1.50 veces más probable que si los productos fueran independientes.\n\nRegla: Manzana, Leche -&gt; Pan\n  Soporte: 0.17\n  Confianza: 0.50\n  Lift: 0.75\n  Interpretación: Si un cliente compra Manzana, Leche, hay una confianza del 50.00% de que también comprará Pan. El lift de 0.75 indica que esta relación es 0.75 veces más probable que si los productos fueran independientes.\n\nRegla: Pan, Manzana -&gt; Mantequilla\n  Soporte: 0.17\n  Confianza: 1.00\n  Lift: 1.50\n  Interpretación: Si un cliente compra Pan, Manzana, hay una confianza del 100.00% de que también comprará Mantequilla. El lift de 1.50 indica que esta relación es 1.50 veces más probable que si los productos fueran independientes.\n\nRegla: Manzana, Mantequilla -&gt; Pan\n  Soporte: 0.17\n  Confianza: 0.50\n  Lift: 0.75\n  Interpretación: Si un cliente compra Manzana, Mantequilla, hay una confianza del 50.00% de que también comprará Pan. El lift de 0.75 indica que esta relación es 0.75 veces más probable que si los productos fueran independientes.\n\nRegla: Pan, Manzana, Leche -&gt; Mantequilla\n  Soporte: 0.17\n  Confianza: 1.00\n  Lift: 1.50\n  Interpretación: Si un cliente compra Pan, Manzana, Leche, hay una confianza del 100.00% de que también comprará Mantequilla. El lift de 1.50 indica que esta relación es 1.50 veces más probable que si los productos fueran independientes.\n\nRegla: Pan, Manzana, Mantequilla -&gt; Leche\n  Soporte: 0.17\n  Confianza: 1.00\n  Lift: 1.50\n  Interpretación: Si un cliente compra Pan, Manzana, Mantequilla, hay una confianza del 100.00% de que también comprará Leche. El lift de 1.50 indica que esta relación es 1.50 veces más probable que si los productos fueran independientes.\n\nRegla: Pan, Leche, Mantequilla -&gt; Manzana\n  Soporte: 0.17\n  Confianza: 0.50\n  Lift: 1.00\n  Interpretación: Si un cliente compra Pan, Leche, Mantequilla, hay una confianza del 50.00% de que también comprará Manzana. El lift de 1.00 indica que esta relación es 1.00 veces más probable que si los productos fueran independientes.\n\nRegla: Manzana, Leche, Mantequilla -&gt; Pan\n  Soporte: 0.17\n  Confianza: 1.00\n  Lift: 1.50\n  Interpretación: Si un cliente compra Manzana, Leche, Mantequilla, hay una confianza del 100.00% de que también comprará Pan. El lift de 1.50 indica que esta relación es 1.50 veces más probable que si los productos fueran independientes.\n\nRegla: Pan, Manzana -&gt; Leche, Mantequilla\n  Soporte: 0.17\n  Confianza: 1.00\n  Lift: 3.00\n  Interpretación: Si un cliente compra Pan, Manzana, hay una confianza del 100.00% de que también comprará Leche, Mantequilla. El lift de 3.00 indica que esta relación es 3.00 veces más probable que si los productos fueran independientes.\n\nRegla: Manzana, Leche -&gt; Pan, Mantequilla\n  Soporte: 0.17\n  Confianza: 0.50\n  Lift: 1.00\n  Interpretación: Si un cliente compra Manzana, Leche, hay una confianza del 50.00% de que también comprará Pan, Mantequilla. El lift de 1.00 indica que esta relación es 1.00 veces más probable que si los productos fueran independientes.\n\nRegla: Manzana, Mantequilla -&gt; Pan, Leche\n  Soporte: 0.17\n  Confianza: 0.50\n  Lift: 1.00\n  Interpretación: Si un cliente compra Manzana, Mantequilla, hay una confianza del 50.00% de que también comprará Pan, Leche. El lift de 1.00 indica que esta relación es 1.00 veces más probable que si los productos fueran independientes.\n\nRegla: Leche, Mantequilla -&gt; Pan, Manzana\n  Soporte: 0.17\n  Confianza: 0.50\n  Lift: 3.00\n  Interpretación: Si un cliente compra Leche, Mantequilla, hay una confianza del 50.00% de que también comprará Pan, Manzana. El lift de 3.00 indica que esta relación es 3.00 veces más probable que si los productos fueran independientes.",
    "crumbs": [
      "Reglas de Asociación",
      "Implementación del ejemplo con python"
    ]
  },
  {
    "objectID": "semana-2/snake-game/snake-game.html",
    "href": "semana-2/snake-game/snake-game.html",
    "title": "Snake Game",
    "section": "",
    "text": "// Variables globales para la serpiente, resolución de la cuadrícula, comida, y dimensiones de la cuadrícula.\nlet snake;\nlet rez = 20; // Factor de resolución para escalar todo el juego.\nlet food;\nlet w; // Ancho del campo de juego en \"unidades\" de juego, no en píxeles.\nlet h; // Altura del campo de juego en \"unidades\" de juego, no en píxeles.\n\n// Función de configuración inicial para p5.js, se llama una vez al inicio.\nfunction setup() {\n  createCanvas(400, 400); // Crea un lienzo de 400x400 píxeles.\n  w = floor(width / rez); // Calcula el ancho del campo de juego en unidades de juego.\n  h = floor(height / rez); // Calcula la altura del campo de juego en unidades de juego.\n  frameRate(5); // Establece la velocidad del juego a 5 cuadros por segundo.\n  snake = new Snake(); // Crea una nueva instancia de la serpiente.\n  foodLocation(); // Coloca la comida en una ubicación inicial aleatoria.\n}\n\n// Genera una nueva ubicación para la comida en el campo de juego.\nfunction foodLocation() {\n  let x = floor(random(w)); // Posición aleatoria en el eje X.\n  let y = floor(random(h)); // Posición aleatoria en el eje Y.\n  food = createVector(x, y); // Crea un vector para la posición de la comida.\n}\n\n// Función que se llama cada vez que se presiona una tecla.\nfunction keyPressed() {\n  // Cambia la dirección de la serpiente basándose en la tecla presionada.\n  if (keyCode === LEFT_ARROW) {\n    snake.setDir(-1, 0); // Mueve hacia la izquierda.\n  } else if (keyCode === RIGHT_ARROW) {\n    snake.setDir(1, 0); // Mueve hacia la derecha.\n  } else if (keyCode === DOWN_ARROW) {\n    snake.setDir(0, 1); // Mueve hacia abajo.\n  } else if (keyCode === UP_ARROW) {\n    snake.setDir(0, -1); // Mueve hacia arriba.\n  } else if (key == ' ') {\n    snake.grow(); // Hace crecer la serpiente al presionar la barra espaciadora.\n  }\n}\n\n// Función de dibujo que p5.js llama en bucle para animar el juego.\nfunction draw() {\n  scale(rez); // Escala todo el dibujo por el factor de resolución.\n  background(220); // Establece el color de fondo del lienzo.\n  if (snake.eat(food)) {\n    foodLocation(); // Si la serpiente come la comida, genera una nueva ubicación para la comida.\n  }\n  snake.update(); // Actualiza la posición de la serpiente.\n  snake.show(); // Dibuja la serpiente en el lienzo.\n\n  // Comprueba si el juego ha terminado (la serpiente choca consigo misma o con el borde).\n  if (snake.endGame()) {\n    print(\"END GAME\"); // Imprime un mensaje en la consola.\n    background(255, 0, 0); // Cambia el color de fondo a rojo para indicar el fin del juego.\n    noLoop(); // Detiene el bucle de dibujo, finalizando el juego.\n  }\n\n  // Dibuja la comida en el campo de juego.\n  noStroke(); // No dibuja bordes para la comida.\n  fill(255, 0, 0); // Establece el color de la comida a rojo.\n  rect(food.x, food.y, 1, 1); // Dibuja la comida como un cuadrado.\n}\n\nclass Snake {\n  \n  // Constructor: inicializa la serpiente con un segmento en el centro del campo de juego.\n  constructor() {\n    this.body = []; // Array para almacenar los segmentos del cuerpo de la serpiente.\n    this.body[0] = createVector(floor(w/2), floor(h/2)); // Posición inicial en el centro.\n    this.xdir = 0; // Dirección inicial en el eje X.\n    this.ydir = 0; // Dirección inicial en el eje Y.\n    this.len = 0; // Longitud inicial de la serpiente.\n  }\n  \n  // setDir: Establece la dirección de movimiento de la serpiente.\n  setDir(x, y) {\n    this.xdir = x;\n    this.ydir = y;\n  }\n  \n  // update: Actualiza la posición de la serpiente moviendo el cuerpo.\n  update() {\n    let head = this.body[this.body.length-1].copy(); // Copia la posición actual de la cabeza.\n    this.body.shift(); // Elimina el segmento más antiguo del cuerpo.\n    head.x += this.xdir; // Mueve la cabeza en el eje X.\n    head.y += this.ydir; // Mueve la cabeza en el eje Y.\n    this.body.push(head); // Añade la nueva posición de la cabeza al cuerpo.\n  }\n  \n  // grow: Hace crecer la serpiente añadiendo un segmento al cuerpo.\n  grow() {\n    let head = this.body[this.body.length-1].copy(); // Copia la última posición de la cabeza.\n    this.len++; // Aumenta la longitud de la serpiente.\n    this.body.push(head); // Añade el nuevo segmento al cuerpo.\n  }\n  \n  // endGame: Comprueba si la serpiente ha chocado consigo misma o con el borde del campo de juego.\n  endGame() {\n    let x = this.body[this.body.length-1].x; // Posición X de la cabeza.\n    let y = this.body[this.body.length-1].y; // Posición Y de la cabeza.\n    // Comprueba colisión con bordes.\n    if(x &gt; w-1 || x &lt; 0 || y &gt; h-1 || y &lt; 0) {\n       return true;\n    }\n    // Comprueba colisión consigo misma.\n    for(let i = 0; i &lt; this.body.length-1; i++) {\n      let part = this.body[i];\n      if(part.x == x && part.y == y) {\n          return true;\n      }\n    }\n    return false;\n  }\n  \n  // eat: Determina si la serpiente ha comido una fruta.\n  eat(pos) {\n    let x = this.body[this.body.length-1].x; // Posición X de la cabeza.\n    let y = this.body[this.body.length-1].y; // Posición Y de la cabeza.\n    // Comprueba si la posición de la cabeza coincide con la fruta.\n    if(x == pos.x && y == pos.y) {\n      this.grow(); // Hace crecer la serpiente.\n      return true;\n    }\n    return false;\n  }\n  \n  // show: Dibuja la serpiente en el campo de juego.\n  show() {\n      for(let i = 0; i &lt; this.body.length; i++) {\n        fill(0); // Color de relleno para la serpiente.\n        noStroke(); // Sin borde para los segmentos.\n        rect(this.body[i].x, this.body[i].y, 1, 1); // Dibuja cada segmento del cuerpo.\n    }\n  }\n}",
    "crumbs": [
      "semana-2",
      "snake-game",
      "Snake Game"
    ]
  },
  {
    "objectID": "semana-1/semana-1.html",
    "href": "semana-1/semana-1.html",
    "title": "Usando p5js con modelos de Teachable Machine",
    "section": "",
    "text": "// Add some header info\n// For TM template code\n\n// Video\nlet video;\nlet classifier;\nlet modelLoaded = 'https://teachablemachine.withgoogle.com/models/bXy2kDNi/';\nlet label = 'esperando...';\n\n// STEP 1: Load the model!\n\nfunction preload(){\n  classifier = ml5.imageClassifier(modelLoaded);\n}\n\nfunction setup() {\n  createCanvas(640, 520); \n  // Create the video\n  video = createCapture(VIDEO);\n  video.hide();\n\n  // STEP 2: Start classifying\n  classifyVideo();\n}\n\n// STEP 2 classify!\nfunction classifyVideo() {\n  classifier = classifier.classify(video, gotResults);\n}\n\nfunction draw() {\n  background(0);\n  \n  // Draw the video\n  image(video, 0, 0);\n\n  // STEP 4: Draw the label\n  textSize(30);\n  textAlign(CENTER, CENTER);\n  fill(255);\n  text(label, width / 2, height - 16);\n}\n\n\n// STEP 3: Get the classification!\nfunction gotResults(error, results) {\n  // Something went wrong!\n  if (error) {\n    console.error(error);\n    return;\n  }\n  //console.log(results);\n  //console.log(results[0].label);\n  label = results[0].label;\n  \n}",
    "crumbs": [
      "semana-1",
      "Usando p5js con modelos de Teachable Machine"
    ]
  },
  {
    "objectID": "p5js/02_p5testing.html#bye",
    "href": "p5js/02_p5testing.html#bye",
    "title": "p5 con ml5",
    "section": "Bye",
    "text": "Bye",
    "crumbs": [
      "p5js",
      "p5 con ml5"
    ]
  },
  {
    "objectID": "observablejs/03_objs.html",
    "href": "observablejs/03_objs.html",
    "title": "observable js",
    "section": "",
    "text": "Code\ndata = FileAttachment(\"palmer-penguins.csv\").csv({ typed: true})\n\nviewof bill_length_min = Inputs.range(\n  [32, 50],\n  {value: 35, step: 1, label: \"Bill length (min):\"}\n)\nviewof islands = Inputs.checkbox(\n  [\"Torgersen\", \"Biscoe\", \"Dream\"],\n  {value: [\"Torgersen\", \"Biscoe\"],\n    label: \"Islands:\"\n  }\n)\n\nfiltered = data.filter(function(penguin){\n  return bill_length_min &lt; penguin.bill_length_mm &&\n    islands.includes(penguin.island);\n})\n\nPlot.rectY(filtered, \n  Plot.binX(\n    {y: \"count\"}, \n    {x: \"body_mass_g\", fill: \"species\", thresholds: 20}\n  ))\n  .plot({\n    facet: {\n      data: filtered,\n      x: \"sex\",\n      y: \"species\",\n      marginRight: 80\n    },\n    marks: [\n      Plot.frame(),\n    ]\n  }\n)",
    "crumbs": [
      "observablejs",
      "observable js"
    ]
  },
  {
    "objectID": "observablejs/03_objs.html#hello",
    "href": "observablejs/03_objs.html#hello",
    "title": "observable js",
    "section": "",
    "text": "Code\ndata = FileAttachment(\"palmer-penguins.csv\").csv({ typed: true})\n\nviewof bill_length_min = Inputs.range(\n  [32, 50],\n  {value: 35, step: 1, label: \"Bill length (min):\"}\n)\nviewof islands = Inputs.checkbox(\n  [\"Torgersen\", \"Biscoe\", \"Dream\"],\n  {value: [\"Torgersen\", \"Biscoe\"],\n    label: \"Islands:\"\n  }\n)\n\nfiltered = data.filter(function(penguin){\n  return bill_length_min &lt; penguin.bill_length_mm &&\n    islands.includes(penguin.island);\n})\n\nPlot.rectY(filtered, \n  Plot.binX(\n    {y: \"count\"}, \n    {x: \"body_mass_g\", fill: \"species\", thresholds: 20}\n  ))\n  .plot({\n    facet: {\n      data: filtered,\n      x: \"sex\",\n      y: \"species\",\n      marginRight: 80\n    },\n    marks: [\n      Plot.frame(),\n    ]\n  }\n)",
    "crumbs": [
      "observablejs",
      "observable js"
    ]
  },
  {
    "objectID": "semana-2/clasificador-dia-noche/clasificador-dia-noche.html",
    "href": "semana-2/clasificador-dia-noche/clasificador-dia-noche.html",
    "title": "Clasificador dia/noche",
    "section": "",
    "text": "// Video\nlet video;\nlet classifier;\nlet modelLoaded = 'https://teachablemachine.withgoogle.com/models/bXy2kDNi/';\nlet label = 'esperando...';\n\n// STEP 1: Load the model!\nfunction preload() {\n  classifier = ml5.imageClassifier(modelLoaded);\n}\n\nfunction setup() {\n  createCanvas(640, 520);\n  // Create the video\n  video = createCapture(VIDEO);\n  video.hide();\n\n  // STEP 2: Start classifying\n  classifyVideo();\n}\n\n// STEP 2: Classify!\nfunction classifyVideo() {\n  classifier.classify(video, gotResults); // Corrected this line\n}\n\nfunction draw() {\n  // Draw the video\n  image(video, 0, 0);\n\n  // STEP 4: Draw the label\n  textSize(30);\n  textAlign(CENTER, CENTER);\n  fill(255);\n  text(label, width / 2, height - 16);\n\n  // Pick an emoji, the \"default\" is a placeholder\n  let emoji = \"🫷\"; // Placeholder emoji\n  if (label == \"nighttime\") {\n    emoji = \"☽\"; // Nighttime emoji\n  } else if (label == \"daytime\") {\n    emoji = \"🌞\"; // Daytime emoji, corrected to use else if for proper conditional logic\n  }\n\n  // Draw the emoji\n  textSize(256);\n  text(emoji, width / 2, height / 2);\n}\n\n// STEP 3: Get the classification!\nfunction gotResults(error, results) {\n  // Something went wrong!\n  if (error) {\n    console.error(error);\n    return;\n  }\n  // Update the label with the result from the classifier\n  label = results[0].label;\n}",
    "crumbs": [
      "semana-2",
      "clasificador-dia-noche",
      "Clasificador dia/noche"
    ]
  },
  {
    "objectID": "Reglas de Asociación/intro_reglas_asociacion.html",
    "href": "Reglas de Asociación/intro_reglas_asociacion.html",
    "title": "Introducción a las Reglas de Asociación",
    "section": "",
    "text": "Las reglas de asociación son una técnica de minería de datos que permite descubrir relaciones interesantes entre variables en grandes conjuntos de datos. Estas reglas son especialmente útiles en el análisis de datos de transacciones, como los registros de ventas en un supermercado. Vamos a crear un ejemplo didáctico para entender cómo funcionan.\n\n\nÍtem (Item): Un ítem es un producto o artículo individual que se vende en una transacción. En el contexto de las reglas de asociación, un conjunto de ítems se refiere a uno o más productos que se compran juntos en una transacción.\n\nSoporte (Support): Es la proporción de transacciones que contienen un conjunto de ítems específico. Ayuda a identificar cuán común es un conjunto de ítems en el conjunto de datos.\n\\[\n\\text{Soporte} = \\frac{\\text{Número de transacciones que contienen el conjunto de ítems}}{\\text{Número total de transacciones}}\n\\]\n\nExplicación:\n\nEl soporte mide la frecuencia con la que un conjunto de ítems aparece en el conjunto de datos.\nEs útil porque nos ayuda a identificar cuáles combinaciones de productos son comunes en nuestras transacciones.\nPor ejemplo, si el soporte de “leche y pan” es alto, significa que estos productos se compran juntos con frecuencia.\n\n\nConfianza (Confidence): Es la proporción de transacciones que contienen el conjunto de ítems A que también contienen el conjunto de ítems B. Indica la probabilidad de que B se compre cuando A se compra.\n\\[\n\\text{Confianza}(A \\rightarrow B) = \\frac{\\text{Soporte}(A \\cup B)}{\\text{Soporte}(A)}\n\\]\n\nExplicación:\n\nLa confianza mide la probabilidad de que el ítem B sea comprado cuando el ítem A ya ha sido comprado.\nEs útil para entender la fuerza de la regla de asociación.\nPor ejemplo, una confianza del 75% para la regla “leche \\(\\rightarrow\\) pan” significa que el 75% de las veces que los clientes compran leche, también compran pan.\n\n\nLift: Mide la relación entre la ocurrencia de A y B. Indica cuánto más probable es que B se compre cuando A se compra, en comparación con la probabilidad de comprar B sin A.\n\\[\n\\text{Lift}(A \\rightarrow B) = \\frac{\\text{Confianza}(A \\rightarrow B)}{\\text{Soporte}(B)}\n\\]\n\nExplicación:\n\nEl lift mide la relación entre la ocurrencia de A y B en comparación con su ocurrencia esperada si fueran independientes.\nUn lift mayor a 1 indica que A y B ocurren juntos más a menudo de lo esperado si fueran independientes.\nEs útil para identificar relaciones significativas entre productos.\nPor ejemplo, si el lift de “leche \\(\\rightarrow\\) pan” es 1.125, significa que los clientes que compran leche son 1.125 veces más propensos a comprar pan que el promedio de todos los clientes.\n\n\n\n\n\n\n\nImaginemos que gestionas un pequeño supermercado y tienes los datos de las transacciones de los últimos meses.\nQuieres analizar estos datos para descubrir patrones en las compras de tus clientes, es decir, qué productos suelen comprarse juntos.\n\n\n\n\nSupongamos que tenemos las siguientes transacciones:\n\nTransacción 1: Leche, Pan, Mantequilla\nTransacción 2: Leche, Pan\nTransacción 3: Leche, Manzana\nTransacción 4: Pan, Mantequilla\nTransacción 5: Leche, Pan, Mantequilla, Manzana\nTransacción 6: Manzana, Mantequilla\n\n\n\n\nPrimero, representamos las transacciones en una matriz donde cada fila representa una transacción y cada columna representa un producto.\nUsamos 1 para indicar que un producto se compró en esa transacción y 0 en caso contrario.\n\n\n\n\n\nLeche\nPan\nMantequilla\nManzana\n\n\n\n\nT1\n1\n1\n1\n0\n\n\nT2\n1\n1\n0\n0\n\n\nT3\n1\n0\n0\n1\n\n\nT4\n0\n1\n1\n0\n\n\nT5\n1\n1\n1\n1\n\n\nT6\n0\n0\n1\n1\n\n\n\n\n\n\n\nPara identificar patrones frecuentes, calculamos el soporte de cada combinación de productos.\nEl soporte es la proporción de transacciones en las que aparece una combinación de productos.\n\nSoporte:\n\nSoporte de \\(\\{Leche\\}\\) = 4/6\nSoporte de \\(\\{Pan\\}\\) = 4/6\nSoporte de \\(\\{Mantequilla\\}\\) = 4/6\nSoporte de \\(\\{Manzana\\}\\) = 3/6\nSoporte de \\(\\{Leche, Pan\\}\\) = 3/6\nSoporte de \\(\\{Leche, Mantequilla\\}\\) = 2/6\nSoporte de \\(\\{Pan, Mantequilla\\}\\) = 3/6\nSoporte de \\(\\{Leche, Manzana\\}\\) = 2/6\nSoporte de \\(\\{Pan, Manzana\\}\\) = 1/6\nSoporte de \\(\\{Mantequilla, Manzana\\}\\) = 2/6\n\n\n\n\n\nUna vez identificados los patrones frecuentes, generamos reglas de asociación.\nEstas reglas tienen la forma \\(A \\rightarrow B\\), donde A (antecedente) y B (consecuente) son conjuntos de productos.\nPara cada regla, calculamos la confianza y el lift.\nUna vez identificados los patrones frecuentes, generamos reglas de asociación.\n\nReglas:\n\nRegla: \\(\\{Leche\\} -&gt; \\{Pan\\}\\)\n\n\\[Confianza = \\frac{\\text{Soporte}(\\{Leche, Pan\\})}{\\text{Soporte}(\\{Leche\\})} = \\frac{3/6}{4/6} = 0.75\\]\n\\[Lift = \\frac{\\text{Confianza}}{\\text{Soporte}(\\{Pan\\})} = \\frac{0.75}{4/6} = 1.125\\]\n\nRegla: {Pan} -&gt; {Leche}\n\n\\[Confianza = \\frac{\\text{Soporte}(\\{Leche, Pan\\})}{\\text{Soporte}(\\{Pan\\})} = \\frac{3/6}{4/6} = 0.75\\]\n\\[Lift = \\frac{\\text{Confianza}}{\\text{Soporte}(\\{Leche\\})} = \\frac{0.75}{4/6} = 1.125\\]\n\n\n\n\n\n\nLa regla \\(\\{Leche\\} \\rightarrow \\{Pan\\}\\) con una confianza de 0.75 significa que el 75% de las veces que los clientes compran leche, también compran pan.\nUn lift de 1.125 indica una leve relación positiva entre la compra de leche y pan, sugiriendo que comprar leche aumenta la probabilidad de que también se compre pan.\n\n\nsource\n\n\n\n\n\n say_hello (to)\n\nSay hello to somebody\n\n\nCode\nsay_hello(\"World\")\n\n\n'Hello World!'",
    "crumbs": [
      "Reglas de Asociación",
      "Introducción a las Reglas de Asociación"
    ]
  },
  {
    "objectID": "Reglas de Asociación/intro_reglas_asociacion.html#introducción-a-las-reglas-de-asociación",
    "href": "Reglas de Asociación/intro_reglas_asociacion.html#introducción-a-las-reglas-de-asociación",
    "title": "Introducción a las Reglas de Asociación",
    "section": "",
    "text": "Las reglas de asociación son una técnica de minería de datos que permite descubrir relaciones interesantes entre variables en grandes conjuntos de datos. Estas reglas son especialmente útiles en el análisis de datos de transacciones, como los registros de ventas en un supermercado. Vamos a crear un ejemplo didáctico para entender cómo funcionan.\n\n\nÍtem (Item): Un ítem es un producto o artículo individual que se vende en una transacción. En el contexto de las reglas de asociación, un conjunto de ítems se refiere a uno o más productos que se compran juntos en una transacción.\n\nSoporte (Support): Es la proporción de transacciones que contienen un conjunto de ítems específico. Ayuda a identificar cuán común es un conjunto de ítems en el conjunto de datos.\n\\[\n\\text{Soporte} = \\frac{\\text{Número de transacciones que contienen el conjunto de ítems}}{\\text{Número total de transacciones}}\n\\]\n\nExplicación:\n\nEl soporte mide la frecuencia con la que un conjunto de ítems aparece en el conjunto de datos.\nEs útil porque nos ayuda a identificar cuáles combinaciones de productos son comunes en nuestras transacciones.\nPor ejemplo, si el soporte de “leche y pan” es alto, significa que estos productos se compran juntos con frecuencia.\n\n\nConfianza (Confidence): Es la proporción de transacciones que contienen el conjunto de ítems A que también contienen el conjunto de ítems B. Indica la probabilidad de que B se compre cuando A se compra.\n\\[\n\\text{Confianza}(A \\rightarrow B) = \\frac{\\text{Soporte}(A \\cup B)}{\\text{Soporte}(A)}\n\\]\n\nExplicación:\n\nLa confianza mide la probabilidad de que el ítem B sea comprado cuando el ítem A ya ha sido comprado.\nEs útil para entender la fuerza de la regla de asociación.\nPor ejemplo, una confianza del 75% para la regla “leche \\(\\rightarrow\\) pan” significa que el 75% de las veces que los clientes compran leche, también compran pan.\n\n\nLift: Mide la relación entre la ocurrencia de A y B. Indica cuánto más probable es que B se compre cuando A se compra, en comparación con la probabilidad de comprar B sin A.\n\\[\n\\text{Lift}(A \\rightarrow B) = \\frac{\\text{Confianza}(A \\rightarrow B)}{\\text{Soporte}(B)}\n\\]\n\nExplicación:\n\nEl lift mide la relación entre la ocurrencia de A y B en comparación con su ocurrencia esperada si fueran independientes.\nUn lift mayor a 1 indica que A y B ocurren juntos más a menudo de lo esperado si fueran independientes.\nEs útil para identificar relaciones significativas entre productos.\nPor ejemplo, si el lift de “leche \\(\\rightarrow\\) pan” es 1.125, significa que los clientes que compran leche son 1.125 veces más propensos a comprar pan que el promedio de todos los clientes.\n\n\n\n\n\n\n\nImaginemos que gestionas un pequeño supermercado y tienes los datos de las transacciones de los últimos meses.\nQuieres analizar estos datos para descubrir patrones en las compras de tus clientes, es decir, qué productos suelen comprarse juntos.\n\n\n\n\nSupongamos que tenemos las siguientes transacciones:\n\nTransacción 1: Leche, Pan, Mantequilla\nTransacción 2: Leche, Pan\nTransacción 3: Leche, Manzana\nTransacción 4: Pan, Mantequilla\nTransacción 5: Leche, Pan, Mantequilla, Manzana\nTransacción 6: Manzana, Mantequilla\n\n\n\n\nPrimero, representamos las transacciones en una matriz donde cada fila representa una transacción y cada columna representa un producto.\nUsamos 1 para indicar que un producto se compró en esa transacción y 0 en caso contrario.\n\n\n\n\n\nLeche\nPan\nMantequilla\nManzana\n\n\n\n\nT1\n1\n1\n1\n0\n\n\nT2\n1\n1\n0\n0\n\n\nT3\n1\n0\n0\n1\n\n\nT4\n0\n1\n1\n0\n\n\nT5\n1\n1\n1\n1\n\n\nT6\n0\n0\n1\n1\n\n\n\n\n\n\n\nPara identificar patrones frecuentes, calculamos el soporte de cada combinación de productos.\nEl soporte es la proporción de transacciones en las que aparece una combinación de productos.\n\nSoporte:\n\nSoporte de \\(\\{Leche\\}\\) = 4/6\nSoporte de \\(\\{Pan\\}\\) = 4/6\nSoporte de \\(\\{Mantequilla\\}\\) = 4/6\nSoporte de \\(\\{Manzana\\}\\) = 3/6\nSoporte de \\(\\{Leche, Pan\\}\\) = 3/6\nSoporte de \\(\\{Leche, Mantequilla\\}\\) = 2/6\nSoporte de \\(\\{Pan, Mantequilla\\}\\) = 3/6\nSoporte de \\(\\{Leche, Manzana\\}\\) = 2/6\nSoporte de \\(\\{Pan, Manzana\\}\\) = 1/6\nSoporte de \\(\\{Mantequilla, Manzana\\}\\) = 2/6\n\n\n\n\n\nUna vez identificados los patrones frecuentes, generamos reglas de asociación.\nEstas reglas tienen la forma \\(A \\rightarrow B\\), donde A (antecedente) y B (consecuente) son conjuntos de productos.\nPara cada regla, calculamos la confianza y el lift.\nUna vez identificados los patrones frecuentes, generamos reglas de asociación.\n\nReglas:\n\nRegla: \\(\\{Leche\\} -&gt; \\{Pan\\}\\)\n\n\\[Confianza = \\frac{\\text{Soporte}(\\{Leche, Pan\\})}{\\text{Soporte}(\\{Leche\\})} = \\frac{3/6}{4/6} = 0.75\\]\n\\[Lift = \\frac{\\text{Confianza}}{\\text{Soporte}(\\{Pan\\})} = \\frac{0.75}{4/6} = 1.125\\]\n\nRegla: {Pan} -&gt; {Leche}\n\n\\[Confianza = \\frac{\\text{Soporte}(\\{Leche, Pan\\})}{\\text{Soporte}(\\{Pan\\})} = \\frac{3/6}{4/6} = 0.75\\]\n\\[Lift = \\frac{\\text{Confianza}}{\\text{Soporte}(\\{Leche\\})} = \\frac{0.75}{4/6} = 1.125\\]\n\n\n\n\n\n\nLa regla \\(\\{Leche\\} \\rightarrow \\{Pan\\}\\) con una confianza de 0.75 significa que el 75% de las veces que los clientes compran leche, también compran pan.\nUn lift de 1.125 indica una leve relación positiva entre la compra de leche y pan, sugiriendo que comprar leche aumenta la probabilidad de que también se compre pan.\n\n\nsource\n\n\n\n\n\n say_hello (to)\n\nSay hello to somebody\n\n\nCode\nsay_hello(\"World\")\n\n\n'Hello World!'",
    "crumbs": [
      "Reglas de Asociación",
      "Introducción a las Reglas de Asociación"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "nbdev-test",
    "section": "",
    "text": "This file will become your README and also the index of your documentation.",
    "crumbs": [
      "nbdev-test"
    ]
  },
  {
    "objectID": "index.html#install",
    "href": "index.html#install",
    "title": "nbdev-test",
    "section": "Install",
    "text": "Install\npip install nbdev_test",
    "crumbs": [
      "nbdev-test"
    ]
  },
  {
    "objectID": "index.html#how-to-use",
    "href": "index.html#how-to-use",
    "title": "nbdev-test",
    "section": "How to use",
    "text": "How to use\nFill me in please! Don’t forget code examples:\n\n1+1\n\n2",
    "crumbs": [
      "nbdev-test"
    ]
  }
]